apiVersion: apps/v1
# What will be doing? Deployment
kind: Deployment
metadata:
  # The name of deployment
  name: jenkins
  labels:
    app: jenkins
# Specification for deployment
spec:
  # How many REPLICAS of the PODS will be creating
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  ### Blueprint for the POD
  template:
    metadata:
      labels:
        app: jenkins
    # Specification for a pod
    spec:
      hostname: jenkins
      securityContext:
        # The UserID for all processes which will runs at any
        # containers in the Pod
        # runAsUser: 1000
        # The GroupID for all processes which will runs at any
        # containers in the Pod
        # runAsGroup: 1000
        # The GroupID as owner for mounted volumes in 
        # conteiners and any files created in that volumes
        fsGroup: 1000
      containers:
      - name: jenkins
        image: fomindn/jenkins:lts
        ports:
          - containerPort: 8080
        volumeMounts:
        - name: local-storage
          mountPath: /var/jenkins_home
          subPath: jenkins
      volumes:
      - name: local-storage
        persistentVolumeClaim:
          claimName: local-volume-claim

---
# Блок описания сервиса (service)
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
spec:
  selector:
    app: jenkins
  # тип "балансировщик загрузки" (LoadBalancer) обозначает, что данный 
  # сервис открывается для публичного доступа по IP адресу и порту (nodePort)
  type: LoadBalancer
  ports:
    - protocol: TCP
      # порт сервиса в кластере по которому другие сервисы (приложения) 
      # кластера осуществляют подключение к данному серверу (сервису)
      port: 90
      # Порт контейнера по которому приложение внутри контейнера 
      # принимает запросы из вне
      targetPort: 8080
      # Порт ноды, доступный из вне кластера и через который осуществляется 
      # подключение к данному сервису (приложению) с локального компьютера
      nodePort: 30500
