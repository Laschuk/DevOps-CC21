pipeline {
    agent any
/*
    environment {
//        DOCKERHUB_CREDENTIALS = credentials('hnom_docker-hub')
    }
*/
    stages {
        // Stage #1 - Build docker image with Dockerfile help
        stage('Build') {
            environment {
                JENK=credentials('Jenkins-user')
            }
            steps {
                dir("Fomin_Dmytro/02.Jenkins/jenkins/") {
                    // Export latest Jenkins plugins list to plugins.txt file
                    sh "curl -sSL &quot;http://$JENK_USR:$JENK_PSW@localhost:8080/pluginManager/api/xml?depth=1&amp;xpath=/*/*/shortName|/*/*/version&amp;wrapper=plugins&quot; | perl -pe &apos;s/.*?&lt;shortName&gt;([\w-]+).*?&lt;version&gt;([^&lt;]+)()(&lt;\/\w+&gt;)+/\1 \2\n/g&apos;|sed &apos;s/ /:/&apos; | sort"  //&gt; plugins.txt
                }
            }
        }
        // Stage #2 - Test builded docker image 
/*        stage('Test') {
            steps {
//                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        
        // Stage #3 - Push docker image to the registry Docker Hub
        stage('Push'){
            steps{
//                sh 'docker push hnom/devopscc_webserver:latest'
            }
        }
        // Stage #4 - Deploy docker image
        stage('Deploy') {
            steps {
//                sh 'docker-compose up -d'
            }
        }
    }
    post {
        always {
//            sh 'docker logout'
        }
*/         
    }   
}
